text_to_speech_appi = "SOME-KEY"

import pdfplumber
import uuid
import os
from elevenlabs import VoiceSettings
from elevenlabs.client import ElevenLabs


# PDF TO TEXT FILE
def extract_text_pdfplumber(pdf_path):
    text = ""
    with pdfplumber.open(pdf_path) as pdf:
        for page in pdf.pages:
            text += page.extract_text()
    return text


pdf_path = 'sample_pdf.pdf'
text = extract_text_pdfplumber(pdf_path)
print(text)
with open('text22.txt', 'w') as file:
    file.write(text)
########################################################

ELEVENLABS_API_KEY = os.getenv("ELEVENLABS_API_KEY")
client = ElevenLabs(api_key=text_to_speech_appi)


def text_to_speech_file(text: str) -> str:
    response = client.text_to_speech.convert(
        voice_id="pNInz6obpgDQGcFmaJgB",  # Adam pre-made voice
        output_format="mp3_22050_32",
        text=text,
        model_id="eleven_turbo_v2_5",  # use the turbo model for low latency
        voice_settings=VoiceSettings(
            stability=0.0,
            similarity_boost=1.0,
            style=0.0,
            use_speaker_boost=True,
        ),
    )

    save_file_path = f"{uuid.uuid4()}.mp3"

    with open(save_file_path, "wb") as f:
        for chunk in response:
            if chunk:
                f.write(chunk)

    print(f"{save_file_path}: A new audio file was saved successfully!")
    return save_file_path


# Usage
with open('text22.txt', 'r') as file:
    text_content = file.read()
    # the file from pdf to text move as a parameter to the function
    audio_file_path = text_to_speech_file(text_content)
